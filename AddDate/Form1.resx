<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB/emf/UD8Z/1FAHv9JOBv/PS0U/0MzGf9TPyH/VUEi/1RBIP9WQiX/VEAj/1RAJP9ZQyf/WUQm/2dV
        Pf/X1ND/lYl7/1M+I/9WQSX/V0Il/2BKLP9iTC7/X0kt/1hCKP87Kxf/QzEb/0s3Hf9RPSL/VEAl/1xH
        Kf9xY0z/hX9z/4mGdv9bSyf/UkAf/048H/9BMBf/Tjwf/1RBI/9WQyT/U0Ag/1RAJP9QPB//VEAj/1dC
        Jf9bRSj/j4N0/+He3f/Hw7//V0Mt/1RAJP9aRSb/X0st/11ILP9hSy7/WUMo/0IxGv9CMRn/TDoh/006
        IP9SPiH/WEQk/3BjTP+HgXX/i4h4/1xOLP9PPh3/TDsd/0AwF/9NOx//VkIj/1NAIf9UQSH/U0Aj/1E+
        H/9SPyH/WUUm/1VBJ//HwLv/393c/+De3f+Bc2b/Uz8m/1dDJP9TPyL/TToi/0o3Hf9HNBr/QS8a/0Mx
        G/9KOCD/VEAm/1RBJf9VQiX/ZFQ5/4iCdv+Ni3z/XlEy/08+Hf9HNxz/QDAY/1A+IP9WQyT/U0Ah/1RC
        If9NOh7/Tjwd/1E+H/9WQib/aFdC/+fk4//f3dv/6ujo/8TAu/9WQiv/VUEm/1Q/IP9TPyT/V0Il/1I/
        H/9RPiP/RTQa/0k3Hv9PPCH/UT4i/1dEJv9sXUL/ioR3/5COf/9pXkL/TDsa/zkqEf9HNxz/UD4g/1FA
        Iv9XRCP/UkAh/0k3Gf9OOxv/Tjwf/1I/JP+Wi3//6Obl/+Hf3f/o5ub/5eTj/4F0ZP9SPyX/VEAk/088
        Hf9VQiT/V0Mj/1I/I/9NOh3/RzYd/0g3HP9TQCT/V0Um/3BjS/+LhXn/k5GC/3pzXf9LOhr/RTYV/0Y1
        Gv9NPB7/TDsd/1VDI/9MOx7/RDMW/0g3GP9OPCD/Tz0k/83Jxf/j4eD/5+bk/+vp6P/p6Oj/ycS//1E+
        Jv9MOiH/TTse/0c2Gv9aRyb/VEEh/1I/I/9MOh3/TDoc/007Hv9YRib/eW5Z/4+Jff+Wk4X/kI19/1NE
        If9DMxf/RzcZ/0o6HP9KORv/Tz0f/0U1Gf8/MBL/TDsc/0c3HP9pXEr/4+Hg/97d2//w7u3/8e/v/+vp
        6f/n5eX/fnJj/0k3Hv9OOyD/RDMZ/1E/Iv9XRCP/UT8i/1E/H/9PPR//V0Qj/1tJKf+JgXL/koyA/5mW
        h/+Wk4X/b2NH/0IyFf9JOBj/QjMW/0Y2GP9HNxr/QDAU/0c3F/9JOBz/QjMZ/5mRif/g397/6ejo//X1
        9f/19fX/8vHx/+rp6f/Lx8P/RzYi/0s5H/9PPSD/RTQa/1NAI/9TQSH/UkAj/1RBIf9RPyL/bV1D/5GL
        f/+Vj4P/m5iJ/5mWh/+UkYH/YFU9/0c5HP9BMhX/RDQX/z8wFf88LRH/RzcZ/0U1Gf9CMx7/xMXG/6Cz
        0P+JqNP/iKja/4mp1/+duN3/uMbc/+vr7P91al3/RjQd/0o5H/84KRH/SDcd/0s6Hv9NOx7/Tz0h/1hI
        Lv+QiXv/lpCD/5mThv+cmYr/m5iK/5iVh/+Wk4X/ko+A/3hxXf9bUDf/QDIX/0g4HP9TQiP/QDIc/0Y6
        LP+Oqs7/ep/M/4ux4f96pNv/fqba/4So3P9/n8//o7ze/6einf8/Lxv/STgh/1xJLP9JOB3/Sjkf/2pe
        Sf99c2L/lpCE/5iShf+alIj/nZeK/52ajP+dmov/m5iJ/5mWiP+XlIX/lZKD/5GPgP98d2X/X1U+/1BB
        Jv9IOh//Ny8n/3udx/+ApdL/gqrc/4Cm1/+Fqdv/g6ba/4Wm2P+Eptf/k6G1/0c3Jf9PPif/XU00/3No
        V/+IgXP/lpCF/5qUiP+blYr/nZeL/5+ZjP+gmo3/n5yO/56bjf+cmYv/m5iK/5mWiP+WlIX/lJKE/5KQ
        gf+Pjn//hYJ0/1lQO/8zMCz/eJvG/3yf0v9/otD/jrPj/5O35f+An9L/hKfe/4Gk1/96ncz/S0E2/2FU
        Qf+Nhnr/lpCF/5qUif+dl4z/npiM/5+Zjf+hm4//opyP/6OdkP+gnY//npuN/5yZiv+bmIr/mZaI/5iV
        h/+VlIf/kpGD/5CPgP+Mi33/g4J1/0VEPv90lMb/c5XF/26Suv9qjLX/bpG8/2+OvP97mdD/gaLY/0la
        dv9EOS3/iYJ3/5WPhP+blYr/nZeM/5+Zjf+gmo3/oZuO/6KckP+jnZH/pJ6S/6Ccj/+em43/nZqL/5uY
        if+al4j/mJWI/5WUhv+TkoT/kI+B/4yLff+Egnf/d3p6/3CQxP9ceZv/WnKR/1xzmf9heJ//V2yO/110
        m/96mtj/XWNx/3x1a/+Qin//mJKH/5yWi/+fmY7/oJqP/6Gbj/+inJD/o52R/6Odkv+knpP/n5yO/56b
        jf+dmoz/nJmK/5qXif+Yloj/lpWH/5OShP+QkIH/jIt//4OCd/93fHz/ZoSx/158mv99oNP/hqDj/46o
        6P+Bndf/Y3uc/22JvP92fIn/hX91/5CLgP+XkYb/nJaL/5+Zjv+hm5D/opyQ/6Odkv+jnZL/pJ6S/6Se
        kv+em47/npuN/52ajP+cmYr/m5iJ/5qXif+XlYf/lJOF/5CPgf+Lin7/goJ2/3V6e/9xkbn/dp3N/4Or
        6P+KpOb/iaHl/4ep6P95nM//c5G5/3J1fP+CfXT/joh+/5aQhv+blYr/n5mO/6GbkP+inJH/o52S/6Od
        kv+knpP/pJ+T/56ajv+em4z/nZuM/5yZi/+al4n/mZeJ/5eVh/+TkoX/kI+C/4qJfP+Af3T/cYOZ/4Sp
        2P+Dq+D/dZTY/3+T3f+Gl+L/eJHc/32j3/+Ep9f/eoql/354cP+Mhnz/lY+G/5qUiv+emI7/oZuR/6Od
        kv+knpP/pJ6T/6Sek/+ln5T/nZqN/56bjf+dmoz/nJmL/5qYiv+al4n/l5WI/5OShv+PjoL/h4Z7/3uA
        gv9xjrb/e6HX/26RxP9ceKv/dJLI/4ef1/9ofb3/ZoO8/3if2P94lcP/eXp//4iDev+TjoX/mJKJ/5yX
        jf+hm5H/o5yT/6OdlP+knpT/pJ6U/6SflP+dmY3/nZqN/52ZjP+cmIv/mpeK/5iXif+WlYf/k5KF/46N
        gf+Eg3j/fZe7/22NvP96nd7/cI7S/3SNy/+Al9L/hp3Y/32S0/9phc3/fqTn/3SSyP+Bl7//hX93/5GM
        g/+Zk4r/npeO/6GbkP+jnZL/pJ2U/6Self+knpT/pZ+U/52Zjv+emo7/nZqN/5yZi/+bmIr/mZaJ/5aU
        h/+SkYT/jIt//4CFiv90l9L/aoe2/4ip6v+QsPL/bYvV/26Jyf98m9r/a4XM/3yc4/+WtPL/dJHM/3ua
        2v+CgIP/kYuC/5qTiv+emI7/oZuR/6Sek/+kn5T/pJ6V/6Wflf+ln5X/nZmO/56aj/+emo//nZqM/5yZ
        i/+Zl4n/l5WH/5KRhP+Ni3//gZGr/3KXzv9piLn/hKPi/4iq6f+Ep+f/bIvE/4Gj7f9qiMb/f6Hj/4Ci
        5f91kcr/c5DJ/32Ho/+Ri4L/mpSL/5+Zj/+inJL/pJ6U/6Wflf+loJX/pqCW/6aglf+dmY7/npqO/56b
        jv+dmoz/nJmL/5uYiv+XlIj/kpGE/42Mf/96hpj/aHya/195of90k8P/b4az/3CGsv9Yb5r/a43N/1Zp
        kP9oeZj/aYCt/2R5n/9hcZf/dnyV/5KMg/+blIv/oJmQ/6Kckv+knpT/pZ+V/6Wglv+moJb/pqCW/52a
        jf+emo3/nZqM/52ajP+dmov/nJiL/5mWiv+UkYb/joyA/4WEef9ue4T/aYKm/2WAqf9qhq//Y3yq/26R
        yP+Hs+7/b5LN/2yIvP91k8T/cpDB/3SEn/+Ig3v/lI6F/5yVjP+gmpH/o5yT/6Self+mn5b/pqCW/6ag
        l/+noZf/nJmN/52ZjP+dmoz/nZqM/52ajP+dmoz/m5eL/5eUh/+Rj4P/h4V6/2Jvev92l8T/f6PS/4au
        4/+ZvvH/l771/53C9/+dwvf/mL3z/4as5f97nNL/Y3KN/4yFfv+WkIf/nZaO/6Gakf+jnZT/pJ6V/6ag
        lv+moJf/p6GX/6iimP+bl4z/nJiM/5yZjP+dmY3/nZqM/52ajf+dmY3/mpeK/5aSh/+Min7/TFdi/3SW
        xP9+pNX/i7To/5G89f+OuvX/m8P3/57D9/+bv/P/gqvl/3eZ0f9cZnn/j4iA/5iSif+emI//opuS/6Sd
        lP+lnpb/p6CX/6egl/+noZj/qaKZ/5qWi/+bl4z/nJiM/52Zjf+dmY3/nZqN/56ajf+cmYz/mpeK/5WR
        hf9YXFz/ZIKt/32j1v+Jsuj/lb7z/5vC9P+lyff/psj2/52/8v+BqOH/cI6//2xsb/+TjIX/m5OL/5+Y
        j/+im5L/pJ2U/6Wflv+noJf/p6GX/6ihmf+popr/mpaK/5uXiv+cmIv/nJmN/52Zjf+dmo3/npqN/52Z
        jf+cmYv/mpaK/4mFfP8/T2P/cpXF/3ym3P99qub/hLDq/4Or5v+CquT/faPe/3iZ0P9NW3T/joeB/5mR
        iv+el47/oZqR/6Ock/+knZT/pZ6V/6afl/+noZj/qKGZ/6mimv+ZlYn/mpaJ/5uXiv+cl4z/nJiM/5yY
        jf+dmY7/nZmN/52ZjP+bmIv/mpWK/3BuaP8zQln/VG+W/1x5ov9MY4b/PlJ0/ztPcf8yRWX/LjxV/2ll
        ZP+YkYn/nZWN/5+Yj/+hmpH/o5yT/6OclP+lnpX/pp+X/6egmP+ooZn/qaGa/5iUh/+ZlIj/mpWI/5qW
        iv+bl4v/m5eM/5yYjf+cmIz/nJiM/5yXjP+cl4v/mpWK/3VybP8eIin/ERon/xwnN/8pNkr/GiM0/yUo
        L/92cWz/mZKK/52Vjv+el4//oJmQ/6Gakf+im5L/pJyU/6Welf+nn5f/p6CY/6ihmf+ooZn/l5KF/5eT
        hv+Yk4f/mZSI/5qVif+blor/m5aL/5yXjP+dl4z/nZeM/52XjP+clov/mpSK/5WPhv9zb2r/VVNR/1tZ
        Vv99eHL/l5CH/5uUi/+el47/n5iP/6CYkP+gmZH/opqT/6OblP+knZX/pZ6W/6afl/+noJj/qKGZ/6mh
        mv+WkYX/lpKF/5iSh/+Zk4f/mZSJ/5qViv+blov/nJaL/5yXi/+cl4z/nJaL/5yXjP+clov/m5WK/5uU
        i/+alIr/mpOK/5uUiv+cloz/npeO/6CZkP+hmZH/oJmR/6Kak/+jm5T/pJyV/6Wdlv+mnpb/p5+Y/6ig
        mf+poZr/qaKb/5WQhP+WkYb/l5GG/5eShv+Wkob/mZSI/5qVif+blYr/m5WK/5uWiv+clov/nJaL/5yV
        i/+clYv/m5WL/5yVi/+blIv/nJWM/52WjP+el43/n5iP/6CZkP+hmZH/opqS/6Kbk/+knJX/pZ2W/6af
        l/+nn5j/qKCZ/6mimv+qopv/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>